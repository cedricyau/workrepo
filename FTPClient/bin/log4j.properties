#log4j.rootCategory=info, rolling

log4j.rootCategory=INFO, stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%5p [%d] %c{2} \"%m\"%n

# BEGIN APPENDER: ROLLING FILE APPENDER (rolling)
#  first:  type of appender (fully qualified class name)
log4j.appender.rolling=org.apache.log4j.RollingFileAppender

#  second: Any configuration information needed for that appender.
#    Many appenders require a layout.
log4j.appender.rolling.File=log/ftp_client.log

log4j.appender.rolling.MaxFileSize=5000KB
#  Keep one backup file
log4j.appender.rolling.MaxBackupIndex=12

log4j.appender.rolling.layout=org.apache.log4j.PatternLayout
log4j.appender.rolling.layout.ConversionPattern=%5p [%d] %c{2} \"%m\"%n

# Possible information overload?
# log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#  additionally, some layouts can take additional information --
#    like the ConversionPattern for the PatternLayout.
# log4j.appender.stdout.layout.ConversionPattern=%d %-5p %-17c{2} (%30F:%L) %3x
- %m%n
# END APPENDER: ROLLING FILE APPENDER (rolling)

#debug
log4j.logger.org.openadaptor.adaptor=debug
log4j.logger.org.springframework=debug
log4j.logger.org.aspectj=debug

#info
log4j.logger.org.openadaptor.adaptor=info
log4j.logger.org.springframework=info
log4j.logger.org.aspectj=info